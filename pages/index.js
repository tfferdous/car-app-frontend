import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import Card from "../components/Card";
import Hero from "../components/Hero";
import axios from "../lib/axios";

export default function Home() {
	const [data, setData] = useState({
		loading: false,
		cars: [],
		isError: false,
	});

	const [input, setInput] = useState("");
	const [category, setCategory] = useState("");
	const router = useRouter();

	// fetch data
	useEffect(() => {
		let queryString = "?";
		if (input) queryString += `&search=${input}`;
		if (category) queryString += `&category=${category}`;
		router.push(queryString, undefined);

		const fetchData = async () => {
			try {
				setData({ ...data, loading: true });
				const res = await axios.get(`/cars${queryString}`);
				setData({ ...data, loading: false, cars: res.data.cars });
			} catch (error) {
				setData({ cars: [], isError: true, loading: false });
				console.log(error.message);
			}
		};
		fetchData();
		// eslint-disable-next-line react-hooks/exhaustive-deps
	}, [input, category]);

	const { loading, cars, isError } = data;

	return (
		<div>
			<Head>
				<title>Car-app</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<Hero setInput={setInput} />
			<section className="py-12 px-8">
				<h1 className="text-center text-6xl">All cars</h1>
				<div className="mt-8 text-right">
					<select
						className="border border-gray-700"
						onChange={(e) =>
							e.target.value === "all"
								? setCategory("")
								: setCategory(e.target.value)
						}>
						<option defaultValue="all">all</option>
						<option value="suv">SUV</option>
						<option value="jeep">Jeep</option>
						<option value="classic">Classic</option>
						<option value="land cruiser">Land cruiser</option>
						<option value="exclusive">Exclusive</option>
					</select>
				</div>
				{loading && <h1>Loading...</h1>}
				{!loading && isError && <h1>Something went wrong!!</h1>}
				{!loading && !isError && (
					<div className="grid mt-5 md:grid-cols-2 lg:grid-cols-3 gap-x-4 gap-y-6">
						{cars?.length
							? cars.map((car) => <Card car={car} key={car._id} />)
							: null}
					</div>
				)}
			</section>
		</div>
	);
}
